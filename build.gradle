/*
 * This build file was auto generated by running the Gradle 'init' task
 * by 'noricc' at '9/17/18 11:09 AM' with Gradle 2.10
 *
 * This generated file contains a commented-out sample Java project to get you started.
 * For more details take a look at the Java Quickstart chapter in the Gradle
 * user guide available at https://docs.gradle.org/2.10/userguide/tutorial_java_projects.html
 */

// Apply the java plugin to add support for Java
plugins {
    id 'java'
    id 'idea'
    // If this doesn't work, update gradle using
    // $ ./gradlew wrapper
    // $ ./gradlew wrapper --gradle-version <version>
    id "me.champeau.gradle.jmh" version "0.4.7"
}

jmh {
     // 'perf' uses perf over the whole iteration
     // 'perfnorm' normalizes over each operation (call to benchmark)
     // profilers = ['perf:delay=0']
     profilers = ['perf:delay=0']
     // avg mode: Loops through the benchmark during timeOnIteration 
     // and averages the running time.
     // We take single shot time (just run the benchmark once)
     benchmarkMode = ['ss']
     warmupIterations = 3
     warmup = '1s'
     fork = 20
     iterations = 1
     // Minimum time to spend at each measurement iteration
     timeOnIteration = '1s'
     benchmarkParameters = [seed: ['0', '1']]
     humanOutputFile = project.file("output-perf.txt")
}

// In this section you declare where to find the dependencies of your project
repositories {
    // Use 'jcenter' for resolving your dependencies.
    // You can declare any Maven/Ivy/file repository here.
    jcenter()
}

// In this section you declare the dependencies for your production and test code
dependencies {
    // The production code uses the SLF4J logging API at compile time
    compile 'org.slf4j:slf4j-api:1.7.13'

    // Declare the dependency for your favourite test framework you want to use in your tests.
    // TestNG is also supported by the Gradle Test task. Just change the
    // testCompile dependency to testCompile 'org.testng:testng:6.8.1' and add
    // 'test.useTestNG()' to your build script.
    testCompile 'junit:junit:4.12'
}
